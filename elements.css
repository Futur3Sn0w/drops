.pbContainer {
    width: calc(100vw - 70px);
    height: calc(100vh - 50px);

    position: absolute;
    bottom: 0;
    right: 0;

    border-radius: 16px 0 0 0;
    overflow: hidden;

    display: flex;
}

.pinBoard {
    display: flex;
    align-items: stretch;
    justify-content: space-evenly;
    flex-wrap: wrap;
    gap: 5px;

    overflow: hidden;

    width: 100%;
    height: fit-content;
    max-height: 100%;

    transition: transform .3s, opacity .3s, filter .2s;

    background-color: inherit;
}

.pinBoard .shape {
    border-radius: 16px;
    cursor: default;
}

.pinBoard.defocus {
    /* transform: scale(.95); */
    opacity: .8;
    filter: blur(8px);

    mix-blend-mode: difference;
}

.pinBoard-EditMode .shape {
    background-color: rgba(100, 100, 100, 0.3) !important;
    transform: scale(0.85);
    cursor: grab;
}

.pinBoard-EditMode .shape.selectedShape {
    background-color: rgba(100, 100, 100, 0.3) !important;
    transform: scale(0.95);
    border: 3px solid rgb(124, 124, 124);
}

.shapesGrid {
    width: 520px;
    height: 320px;

    position: absolute;
    bottom: -70%;
    overflow: hidden;

    transition: bottom .3s, opacity .3s, transform .3s;

    border-radius: 16px 16px 0 0;
    padding: 30px;

    box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.185);

    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
}

.sgShow {
    bottom: 0;
    opacity: 1;

    transform: scale(1);
}

.shape {
    min-width: 130px;
    max-width: 130px;
    min-height: 130px;
    max-height: 130px;

    mix-blend-mode: difference;
    font-size: 35px;
    cursor: pointer;

    position: relative;
    /* overflow: hidden; */

    transition: border .15s, background-color .05s;

    display: flex;
    align-items: center;
    justify-content: center;
}

.shape::before {
    content: "";
    min-width: 130px;
    min-height: 130px;

    background-size: 115px;
    background-position: 50%;
    background-repeat: no-repeat;

    animation-iteration-count: infinite;
    animation-play-state: paused;
    animation-timing-function: linear;

    filter: brightness(100) saturate(100) contrast(0);

    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;
}

.shape::after {
    content: attr(data-opacity);

    position: absolute;
    font-size: 23px;
}

.pinBoard-EditMode .selectedShape,
.addWidget:hover {
    background-color: rgba(100, 100, 100, 0.3) !important;
}

#shape1::before {
    background-image: url('shapes/shape1.svg');
    opacity: 1;

    /* animation-name: infiniteRotate; */
    animation-duration: 20s;
}

#shape2::before {
    background-image: url('shapes/shape2.svg');
    opacity: .8;

    /* animation-name: infiniteRotate; */
    animation-duration: 25s;
    animation-direction: reverse;
}

#shape3::before {
    background-image: url('shapes/shape3.svg');
    opacity: .6;

    /* animation-name: infiniteRotate; */
    animation-duration: 20s;
}

#shape4::before {
    background-image: url('shapes/shape4.svg');
    opacity: .4;

    /* animation-name: tiltLoop1; */
    animation-duration: 2.5s;
}

#shape5::before {
    background-image: url('shapes/shape5.svg');
    opacity: .2;

    /* animation-name: floatLoop1; */
    animation-duration: 3s;
}

.shapeOptions {
    position: absolute;
    left: 0;
    top: 0;
    z-index: 1;

    display: none;
    align-items: center;
    justify-content: center;
    gap: 5px;

    width: 100%;
    max-width: 150px;
    height: 100%;
    max-height: 150px;

    background-color: rgb(58, 58, 58);

    mix-blend-mode: unset;

    border-radius: 14px;
    overflow: hidden;
}

.pinBoard-EditMode .pbWidget .shapeOptions {
    opacity: 0;
}

.pinBoard-EditMode .selectedShape .shapeOptions {
    opacity: 1;
    display: flex;
}

.shapeOption {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 7px;

    background-color: rgb(138, 138, 138);
    border-radius: 4px;

    width: 40px;
    height: 40px;

    cursor: pointer;
}

.shapeOption i {
    font-size: 20px;
}

.shapeOption:hover {
    background-color: rgb(180, 180, 180);
}

@keyframes tiltLoop1 {
    from {
        transform: rotate(-15deg);
    }

    to {
        transform: rotate(15deg);
    }
}

@keyframes tiltLoop2 {
    from {
        transform: scale(0.95) rotate(-3deg);
    }

    to {
        transform: scale(0.95) rotate(3deg);
    }
}

@keyframes floatLoop1 {
    from {
        transform: translateY(-7px);
    }

    to {
        transform: translateY(7px);
    }
}

@keyframes infiniteRotate {
    from {
        transform: rotate(0);
    }

    to {
        transform: rotate(360deg);
    }
}

@keyframes cornerRotate1 {
    0% {
        transform: rotate(0);
        border-radius: 15%;
    }

    25% {
        transform: rotate(45deg);
        border-radius: 50%;
    }

    50% {
        transform: rotate(90deg);
        border-radius: 15%;
    }

    75% {
        transform: rotate(120deg);
        border-radius: 50%;
    }

    100% {
        transform: rotate(180deg);
        border-radius: 15%;
    }
}

.settings {
    display: none;
    align-items: stretch;
    justify-content: space-evenly;
    flex-wrap: wrap;
    gap: 5px;

    width: calc(100vw - 70px);
    height: calc(100vh - 50px);

    user-select: none;

    position: absolute;
    bottom: 0;
    right: 0;
    z-index: 1;

    border-radius: 16px 0 0 0;
    overflow: hidden;
}

.settingsContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;

    width: 100%;
    height: 100%;

    padding: 15px;
}

.setting {
    width: 100%;
    max-width: 450px;
    height: 80px;

    background-color: rgba(0, 0, 0, 0.116);
    border-radius: 14px;

    display: flex;
    align-items: center;
    padding-left: 20px;
}

.settingLabel {
    font-size: 17px;
    font-weight: 600;

    margin-left: 10px;
    transform: translateY(-8px);

    position: relative;
}

.settingLabel::after {
    content: attr(data-settingCaption);
    font-size: 12px;
    font-weight: 400;

    width: max-content;

    position: absolute;
    bottom: -14px;
    left: 0;
}

.setting i {
    font-size: 20px;
}

.sett-options {
    display: flex;
    align-items: flex-end;
    flex-direction: column;
    margin: 0 20px 0 auto;
}

.sett-option {
    font-size: 14px;
    cursor: pointer;
}

.so-button {
    background-color: rgba(255, 255, 255, 0.2);
    padding: 6px 13px;

    border-radius: 500px;
}

.so-button:hover {
    background-color: rgba(255, 255, 255, 0.4);
}